"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.getTickFormatters = exports.getScales = exports.getTickCounts = exports.getRanges = exports.getDomains = exports.getTypes = exports.getForProps = exports.getPlotRect = exports.getDimArrays = void 0;

var _reduce2 = _interopRequireDefault(require("lodash/reduce"));

var _getForKey = require("./getForKey");

var _getDimArrays = _interopRequireDefault(require("./getDimArrays"));

exports.getDimArrays = _getDimArrays.default;

var _getPlotRect = require("./getPlotRect");

exports.getPlotRect = _getPlotRect.getPlotRect;

/*
Functions to be used on the Chart props transformation flow.
The transformation flow starts with the <Chart /> props and successively adds the variables needed for plotting, the transformed props are used for generating render data.
*/
var getForProps = function getForProps(value, getFunc) {
  return function (props) {
    return (0, _reduce2.default)(props.groupedKeys, function (acc, key) {
      var _Object$assign;

      if (props["" + key + value]) return acc;
      return Object.assign({}, acc, (_Object$assign = {}, _Object$assign["" + key + value] = getFunc(props, key), _Object$assign));
    }, {});
  };
};

exports.getForProps = getForProps;
var getTypes = getForProps('Type', _getForKey.getType);
exports.getTypes = getTypes;
var getDomains = getForProps('Domain', _getForKey.getDomain);
exports.getDomains = getDomains;
var getRanges = getForProps('Range', _getForKey.getRange);
exports.getRanges = getRanges;
var getTickCounts = getForProps('TickCount', _getForKey.getTickCount);
exports.getTickCounts = getTickCounts;
var getScales = getForProps('Scale', _getForKey.getScale);
exports.getScales = getScales;
var getTickFormatters = getForProps('TickFormat', _getForKey.getTickFormat);
exports.getTickFormatters = getTickFormatters;