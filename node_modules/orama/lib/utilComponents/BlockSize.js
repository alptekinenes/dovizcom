"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/builtin/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectWithoutProperties"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/inheritsLoose"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

// Copyright 2018 Kensho Technologies, LLC.
var BlockSize =
/*#__PURE__*/
function (_React$Component) {
  (0, _inheritsLoose2.default)(BlockSize, _React$Component);

  function BlockSize() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this, _this.elementRef = function (ref) {
      _this.element = ref;
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = BlockSize.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.update();
  };

  _proto.componentDidUpdate = function componentDidUpdate() {
    this.update();
  };

  _proto.update = function update() {
    if (!this.element) return;
    this.props.onUpdate(Object.assign({}, this.props, {
      width: this.element.offsetWidth,
      height: this.element.offsetHeight
    }));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        onUpdate = _this$props.onUpdate,
        onState = _this$props.onState,
        rest = (0, _objectWithoutProperties2.default)(_this$props, ["onUpdate", "onState"]);
    return React.createElement("div", Object.assign({}, rest, {
      ref: this.elementRef
    }));
  };

  return BlockSize;
}(React.Component);

exports.default = BlockSize;
BlockSize.propTypes = process.env.NODE_ENV !== "production" ? {
  onState: _propTypes.default.func,
  onUpdate: _propTypes.default.func.isRequired
} : {};