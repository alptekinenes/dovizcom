"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/builtin/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.default = Highlight;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectWithoutProperties"));

var _indexOf2 = _interopRequireDefault(require("lodash/indexOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _State = _interopRequireDefault(require("../utils/State"));

// Copyright 2018 Kensho Technologies, LLC.
function mouseDown(props, childProps) {
  var data = props.data;
  var renderDatum = childProps.renderDatum;

  if (renderDatum) {
    var index = (0, _indexOf2.default)(data, renderDatum.data);

    if (index > -1) {
      data.splice(index, 1);
      props.onUpdate({
        data: data.concat()
      });
    } else {
      props.onUpdate({
        data: data.concat([renderDatum.data])
      });
    }
  }
}

function handleChart(props, childProps) {
  switch (childProps.action) {
    case 'mouseDown':
      mouseDown(props, childProps);
      break;
    // case 'mouseDrag': mouseDrag(props, childProps)
    //   break

    default:
  }
}

function InnerHighlight(props) {
  var child = React.Children.only(props.children);

  if (child.type.displayName === 'ChartWidthHOC') {
    var HighlightElement = React.createElement(props.Component, Object.assign({
      skipExtractArrays: true,
      key: "InnerHighlight",
      fillValue: "black",
      alphaValue: 0.5,
      data: props.data
    }, props.componentProps));
    var layers = React.Children.toArray(child.props.children);
    layers.splice(props.slice, 0, HighlightElement);

    var onUpdate = function onUpdate(childProps) {
      return handleChart(props, childProps);
    };

    return React.createElement("div", null, React.cloneElement(child, {
      onUpdate: onUpdate
    }, layers));
  }

  return React.createElement("div", null);
}

InnerHighlight.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes.default.node,
  componentProps: _propTypes.default.object,
  data: _propTypes.default.array,
  slice: _propTypes.default.number
} : {};
InnerHighlight.defaultProps = {
  slice: 1,
  data: []
};

function Highlight(props) {
  var children = props.children,
      rest = (0, _objectWithoutProperties2.default)(props, ["children"]);
  return React.createElement(_State.default, rest, React.createElement(InnerHighlight, {
    onUpdate: props.onUpdate
  }, children));
}

Highlight.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes.default.node,
  onUpdate: _propTypes.default.func
} : {};