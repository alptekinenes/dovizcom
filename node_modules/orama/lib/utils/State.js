"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/builtin/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/inheritsLoose"));

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _isPlainObject2 = _interopRequireDefault(require("lodash/isPlainObject"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

// Copyright 2018 Kensho Technologies, LLC.
var stateHOC =
/*#__PURE__*/
function (_React$PureComponent) {
  (0, _inheritsLoose2.default)(stateHOC, _React$PureComponent);

  function stateHOC() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this, _this.state = {}, _this.handleChildUpdate = function (childProps) {
      _this.setState(childProps);
    }, _this.childrenMap = function (child, key) {
      if (key === void 0) {
        key = 0;
      }

      return React.cloneElement(child, Object.assign({
        onUpdate: _this.handleChildUpdate
      }, (0, _omit2.default)(_this.props, ['children', 'startWith']), _this.state, {
        setState: _this.handleChildUpdate,
        key: key
      }));
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = stateHOC.prototype;

  _proto.componentWillMount = function componentWillMount() {
    if (this.props.startWith && (0, _isFunction2.default)(this.props.startWith)) {
      this.props.startWith(Object.assign({
        onUpdate: this.props.onUpdate || this.handleChildUpdate
      }, (0, _omit2.default)(this.props, ['children', 'startWith']), this.state, {
        setState: this.handleChildUpdate
      }));
    } else if (this.props.startWith && (0, _isPlainObject2.default)(this.props.startWith)) {
      this.setState(this.props.startWith);
    }
  };

  _proto.render = function render() {
    if (React.Children.count(this.props.children) === 0) return React.createElement("span", null);

    if (React.Children.count(this.props.children) > 1) {
      return React.createElement("div", null, React.Children.map(this.props.children, this.childrenMap));
    }

    return this.childrenMap(React.Children.only(this.props.children));
  };

  return stateHOC;
}(React.PureComponent);

exports.default = stateHOC;
stateHOC.defaultProps = {};
stateHOC.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes.default.node,
  onUpdate: _propTypes.default.func,
  startWith: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])
} : {};