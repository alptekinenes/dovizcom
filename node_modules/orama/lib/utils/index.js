"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/builtin/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.notPlotNumber = notPlotNumber;
exports.isPlotNumber = isPlotNumber;
exports.splitBy = splitBy;
exports.windowUtils = exports.rectUtils = exports.path2DUtils = exports.imageRender = exports.dataGeneration = exports.canvasUtils = exports.isDatum = exports.notDatum = exports.stateHOC = exports.labeler = void 0;

var _some2 = _interopRequireDefault(require("lodash/some"));

var _reduce3 = _interopRequireDefault(require("lodash/reduce"));

var _isUndefined2 = _interopRequireDefault(require("lodash/isUndefined"));

var _isNull2 = _interopRequireDefault(require("lodash/isNull"));

var _isNumber2 = _interopRequireDefault(require("lodash/isNumber"));

var _isNaN2 = _interopRequireDefault(require("lodash/isNaN"));

var _labeler = _interopRequireDefault(require("./labeler"));

exports.labeler = _labeler.default;

var _stateHOC = _interopRequireDefault(require("./stateHOC"));

exports.stateHOC = _stateHOC.default;

var _canvasUtils = _interopRequireWildcard(require("./canvasUtils"));

exports.canvasUtils = _canvasUtils;

var _dataGeneration = _interopRequireWildcard(require("./dataGeneration"));

exports.dataGeneration = _dataGeneration;

var _imageRender = _interopRequireWildcard(require("./imageRender"));

exports.imageRender = _imageRender;

var _path2DUtils = _interopRequireWildcard(require("./path2DUtils"));

exports.path2DUtils = _path2DUtils;

var _rectUtils = _interopRequireWildcard(require("./rectUtils"));

exports.rectUtils = _rectUtils;

var _windowUtils = _interopRequireWildcard(require("./windowUtils"));

exports.windowUtils = _windowUtils;

var checkNotPlotNumber = function checkNotPlotNumber(value) {
  return (0, _isNaN2.default)(value) || !(0, _isNumber2.default)(value);
};

function notPlotNumber(value) {
  if (!Array.isArray(value)) return checkNotPlotNumber(value);
  return (0, _some2.default)(value, checkNotPlotNumber);
}

var checkIsPlotNumber = function checkIsPlotNumber(value) {
  return !(0, _isNaN2.default)(value) && (0, _isNumber2.default)(value);
};

function isPlotNumber(value) {
  if (!Array.isArray(value)) return checkIsPlotNumber(value);
  return (0, _some2.default)(value, checkIsPlotNumber);
}

var notDatum = function notDatum(value) {
  return (0, _isUndefined2.default)(value) || (0, _isNaN2.default)(value) || (0, _isNull2.default)(value);
};

exports.notDatum = notDatum;

var isDatum = function isDatum(value) {
  return !notDatum(value);
}; // returns (start, end] as opposed to [].slice() returning [start, end)


exports.isDatum = isDatum;

var slice = function slice(arr, start, end) {
  return arr.slice(start + 1, end + 1);
};

function splitBy(arr, iteratee) {
  var _reduce2 = (0, _reduce3.default)(arr, function (acc, val, idx) {
    if (iteratee(val, idx)) {
      return {
        sliceFrom: idx,
        returnArray: acc.returnArray.concat([slice(arr, acc.sliceFrom, idx)])
      };
    }

    return acc;
  }, {
    sliceFrom: 0,
    returnArray: []
  }),
      sliceFrom = _reduce2.sliceFrom,
      returnArray = _reduce2.returnArray;

  return returnArray.concat([slice(arr, sliceFrom, arr.length)]);
}