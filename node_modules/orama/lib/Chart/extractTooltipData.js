"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.default = extractTooltipData;

var _sortBy2 = _interopRequireDefault(require("lodash/sortBy"));

var _some2 = _interopRequireDefault(require("lodash/some"));

var _reduce2 = _interopRequireDefault(require("lodash/reduce"));

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _isNaN2 = _interopRequireDefault(require("lodash/isNaN"));

var _isDate2 = _interopRequireDefault(require("lodash/isDate"));

var _isArray2 = _interopRequireDefault(require("lodash/isArray"));

var _head2 = _interopRequireDefault(require("lodash/head"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _defaults = require("../chartCore/defaults");

var _getForKey = require("../chartCore/getForKey");

var _getScaleKeyByHash = _interopRequireDefault(require("../Layer/getScaleKeyByHash"));

function getDatum(data) {
  if ((0, _isArray2.default)(data)) return (0, _head2.default)(data);
  return data;
}

var isDisplayable = function isDisplayable(value) {
  return value !== 'NaN' && value !== undefined && !(0, _isNaN2.default)(value);
};

var tooltipValuesForStrings = function tooltipValuesForStrings(tooltipExtraDimensions, datum) {
  return (0, _reduce2.default)(tooltipExtraDimensions, function (acc, key) {
    var value = (0, _get2.default)(datum, key);

    if ((0, _isDate2.default)(value)) {
      value = value.toDateString();
    }

    if (isDisplayable(value)) {
      acc.push({
        name: key,
        value: value
      });
    }

    return acc;
  }, []);
};

var tooltipValuesForObjects = function tooltipValuesForObjects(tooltipExtraDimensions, datum) {
  return (0, _reduce2.default)(tooltipExtraDimensions, function (acc, obj) {
    var accessor = obj.accessor,
        value = obj.value,
        _obj$format = obj.format,
        format = _obj$format === void 0 ? function (d) {
      return d;
    } : _obj$format,
        name = obj.name;
    acc.push({
      name: name || accessor,
      value: format(value || (0, _get2.default)(datum, accessor))
    });
    return acc;
  }, []);
};

function getExtraTooltipValues(props, datum) {
  var tooltipExtraDimensions = props.tooltipExtraDimensions;

  if ((0, _some2.default)(tooltipExtraDimensions, _isString2.default)) {
    return tooltipValuesForStrings(tooltipExtraDimensions, datum);
  }

  return tooltipValuesForObjects(tooltipExtraDimensions, datum);
}

function extractTooltipData(props, hoverData) {
  var localKeys = props.localKeys,
      tooltipKeys = props.tooltipKeys,
      _props$accessorsToolt = props.accessorsTooltipOrder,
      accessorsTooltipOrder = _props$accessorsToolt === void 0 ? _defaults.ACCESSORS_TOOLTIP_ORDER : _props$accessorsToolt;
  var datum = getDatum(hoverData);
  var tooltipValues = (0, _reduce2.default)(tooltipKeys || localKeys, function (acc, key) {
    var scaleKey = (0, _getScaleKeyByHash.default)(props, key);
    var keyAlias = props[key + "Alias"] || key;
    var name = props[key + "Name"] || props[key];
    var formatter = props[scaleKey + "TooltipFormat"] || (0, _getForKey.getTooltipFormat)(props, scaleKey);
    var value = formatter((0, _get2.default)(datum, props[key]));
    var order = accessorsTooltipOrder[key];

    if (isDisplayable(value)) {
      acc.push({
        key: keyAlias,
        name: name,
        value: value,
        order: order
      });
    }

    return acc;
  }, []);
  var extraTooltipValues = getExtraTooltipValues(props, datum);
  var orderedTooltipValues = (0, _map2.default)((0, _sortBy2.default)(tooltipValues, 'order'), function (values) {
    return (0, _omit2.default)(values, 'order');
  });
  var title = props.titleValue || datum[props.title];
  return {
    title: title,
    values: orderedTooltipValues.concat(extraTooltipValues)
  };
}