"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/builtin/interopRequireWildcard");

exports.__esModule = true;
exports.default = exports.Chart = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _defaults = require("../chartCore/defaults");

var _chartTransformFlow = _interopRequireDefault(require("../chartCore/chartTransformFlow"));

var _getLayers = _interopRequireDefault(require("../chartCore/getLayers"));

var _getLocalKeys = _interopRequireDefault(require("../chartCore/getLocalKeys"));

var _stateHOC = _interopRequireDefault(require("../utils/stateHOC"));

var _CanvasInput = _interopRequireDefault(require("../CanvasInput"));

var _ChartBackground = _interopRequireDefault(require("../ChartBackground"));

var _memoize = require("../chartCore/memoize");

var _chartWidthHOC = _interopRequireDefault(require("./chartWidthHOC"));

var _ChartRender = _interopRequireDefault(require("./ChartRender"));

// Copyright 2018 Kensho Technologies, LLC.
function getTheme(props) {
  var theme = Object.assign({}, _defaultTheme.default, props.theme);
  return {
    theme: theme
  };
}

function handleCanvasInput(props, childProps) {
  props.onUpdate(childProps);
}

function StatelessChart(props) {
  var memoizers = props.memoizers;
  var rootProps = (0, _chartTransformFlow.default)(props, getTheme, _getLayers.default, _getLocalKeys.default, memoizers.getDimArrays, memoizers.getTypes, memoizers.getDomains, memoizers.getPlotRect, memoizers.getRanges, memoizers.getTickCounts, memoizers.getScales);
  var renderLayers = memoizers.getRenderLayers(rootProps);
  return React.createElement("div", {
    style: {
      background: props.theme.backgroundFill,
      height: rootProps.height,
      position: 'relative',
      userSelect: 'none',
      width: '100%'
    }
  }, React.createElement(_ChartBackground.default, rootProps), React.createElement(_ChartRender.default, {
    renderLayers: renderLayers,
    rootProps: rootProps,
    theme: rootProps.theme
  }), React.createElement(_CanvasInput.default, {
    onUpdate: function onUpdate(childProps) {
      return handleCanvasInput(props, childProps);
    },
    renderLayers: renderLayers,
    rootProps: rootProps,
    theme: rootProps.theme
  }));
}

StatelessChart.propTypes = process.env.NODE_ENV !== "production" ? {
  memoizers: _propTypes.default.object,
  onUpdate: _propTypes.default.func,
  proportion: _propTypes.default.number,
  theme: _propTypes.default.object,
  width: _propTypes.default.number
} : {};
StatelessChart.defaultProps = {
  proportion: _defaults.PROPORTION,
  theme: _defaultTheme.default,
  width: _defaults.WIDTH
};

StatelessChart.initialState = function () {
  return {
    memoizers: {
      getDimArrays: (0, _memoize.getMemoizeDimArrays)(),
      getTypes: (0, _memoize.getMemoizeTypes)(),
      getDomains: (0, _memoize.getMemoizeDomains)(),
      getPlotRect: (0, _memoize.getMemoizePlotRect)(),
      getRanges: (0, _memoize.getMemoizeRanges)(),
      getTickCounts: (0, _memoize.getMemoizeTickCounts)(),
      getScales: (0, _memoize.getMemoizeScales)(),
      getRenderLayers: (0, _memoize.getMemoizeRenderLayers)()
    }
  };
};

var Chart = (0, _stateHOC.default)(StatelessChart);
exports.Chart = Chart;

var _default = (0, _chartWidthHOC.default)(Chart);

exports.default = _default;