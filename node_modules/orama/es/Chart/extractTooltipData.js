import _sortBy from "lodash/sortBy";
import _some from "lodash/some";
import _reduce from "lodash/reduce";
import _omit from "lodash/omit";
import _map from "lodash/map";
import _isString from "lodash/isString";
import _isNaN from "lodash/isNaN";
import _isDate from "lodash/isDate";
import _isArray from "lodash/isArray";
import _head from "lodash/head";
import _get from "lodash/get";
import { ACCESSORS_TOOLTIP_ORDER } from '../chartCore/defaults';
import { getTooltipFormat } from '../chartCore/getForKey';
import getScaleKeyByHash from '../Layer/getScaleKeyByHash';

function getDatum(data) {
  if (_isArray(data)) return _head(data);
  return data;
}

var isDisplayable = function isDisplayable(value) {
  return value !== 'NaN' && value !== undefined && !_isNaN(value);
};

var tooltipValuesForStrings = function tooltipValuesForStrings(tooltipExtraDimensions, datum) {
  return _reduce(tooltipExtraDimensions, function (acc, key) {
    var value = _get(datum, key);

    if (_isDate(value)) {
      value = value.toDateString();
    }

    if (isDisplayable(value)) {
      acc.push({
        name: key,
        value: value
      });
    }

    return acc;
  }, []);
};

var tooltipValuesForObjects = function tooltipValuesForObjects(tooltipExtraDimensions, datum) {
  return _reduce(tooltipExtraDimensions, function (acc, obj) {
    var accessor = obj.accessor,
        value = obj.value,
        _obj$format = obj.format,
        format = _obj$format === void 0 ? function (d) {
      return d;
    } : _obj$format,
        name = obj.name;
    acc.push({
      name: name || accessor,
      value: format(value || _get(datum, accessor))
    });
    return acc;
  }, []);
};

function getExtraTooltipValues(props, datum) {
  var tooltipExtraDimensions = props.tooltipExtraDimensions;

  if (_some(tooltipExtraDimensions, _isString)) {
    return tooltipValuesForStrings(tooltipExtraDimensions, datum);
  }

  return tooltipValuesForObjects(tooltipExtraDimensions, datum);
}

export default function extractTooltipData(props, hoverData) {
  var localKeys = props.localKeys,
      tooltipKeys = props.tooltipKeys,
      _props$accessorsToolt = props.accessorsTooltipOrder,
      accessorsTooltipOrder = _props$accessorsToolt === void 0 ? ACCESSORS_TOOLTIP_ORDER : _props$accessorsToolt;
  var datum = getDatum(hoverData);

  var tooltipValues = _reduce(tooltipKeys || localKeys, function (acc, key) {
    var scaleKey = getScaleKeyByHash(props, key);
    var keyAlias = props[key + "Alias"] || key;
    var name = props[key + "Name"] || props[key];
    var formatter = props[scaleKey + "TooltipFormat"] || getTooltipFormat(props, scaleKey);
    var value = formatter(_get(datum, props[key]));
    var order = accessorsTooltipOrder[key];

    if (isDisplayable(value)) {
      acc.push({
        key: keyAlias,
        name: name,
        value: value,
        order: order
      });
    }

    return acc;
  }, []);

  var extraTooltipValues = getExtraTooltipValues(props, datum);

  var orderedTooltipValues = _map(_sortBy(tooltipValues, 'order'), function (values) {
    return _omit(values, 'order');
  });

  var title = props.titleValue || datum[props.title];
  return {
    title: title,
    values: orderedTooltipValues.concat(extraTooltipValues)
  };
}