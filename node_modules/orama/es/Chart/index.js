// Copyright 2018 Kensho Technologies, LLC.
import * as React from 'react';
import PropTypes from 'prop-types';
import DEFAULT_THEME from '../defaultTheme';
import { PROPORTION, WIDTH } from '../chartCore/defaults';
import chartTransformFlow from '../chartCore/chartTransformFlow';
import getLayers from '../chartCore/getLayers';
import getLocalKeys from '../chartCore/getLocalKeys';
import stateHOC from '../utils/stateHOC';
import CanvasInput from '../CanvasInput';
import ChartBackground from '../ChartBackground';
import { getMemoizeDimArrays, getMemoizeDomains, getMemoizePlotRect, getMemoizeRanges, getMemoizeRenderLayers, getMemoizeScales, getMemoizeTickCounts, getMemoizeTypes } from '../chartCore/memoize';
import chartWidthHOC from './chartWidthHOC';
import ChartRender from './ChartRender';

function getTheme(props) {
  var theme = Object.assign({}, DEFAULT_THEME, props.theme);
  return {
    theme: theme
  };
}

function handleCanvasInput(props, childProps) {
  props.onUpdate(childProps);
}

function StatelessChart(props) {
  var memoizers = props.memoizers;
  var rootProps = chartTransformFlow(props, getTheme, getLayers, getLocalKeys, memoizers.getDimArrays, memoizers.getTypes, memoizers.getDomains, memoizers.getPlotRect, memoizers.getRanges, memoizers.getTickCounts, memoizers.getScales);
  var renderLayers = memoizers.getRenderLayers(rootProps);
  return React.createElement("div", {
    style: {
      background: props.theme.backgroundFill,
      height: rootProps.height,
      position: 'relative',
      userSelect: 'none',
      width: '100%'
    }
  }, React.createElement(ChartBackground, rootProps), React.createElement(ChartRender, {
    renderLayers: renderLayers,
    rootProps: rootProps,
    theme: rootProps.theme
  }), React.createElement(CanvasInput, {
    onUpdate: function onUpdate(childProps) {
      return handleCanvasInput(props, childProps);
    },
    renderLayers: renderLayers,
    rootProps: rootProps,
    theme: rootProps.theme
  }));
}

StatelessChart.propTypes = process.env.NODE_ENV !== "production" ? {
  memoizers: PropTypes.object,
  onUpdate: PropTypes.func,
  proportion: PropTypes.number,
  theme: PropTypes.object,
  width: PropTypes.number
} : {};
StatelessChart.defaultProps = {
  proportion: PROPORTION,
  theme: DEFAULT_THEME,
  width: WIDTH
};

StatelessChart.initialState = function () {
  return {
    memoizers: {
      getDimArrays: getMemoizeDimArrays(),
      getTypes: getMemoizeTypes(),
      getDomains: getMemoizeDomains(),
      getPlotRect: getMemoizePlotRect(),
      getRanges: getMemoizeRanges(),
      getTickCounts: getMemoizeTickCounts(),
      getScales: getMemoizeScales(),
      getRenderLayers: getMemoizeRenderLayers()
    }
  };
};

export var Chart = stateHOC(StatelessChart);
export default chartWidthHOC(Chart);